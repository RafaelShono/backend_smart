// routes/analyze.js

const express = require('express');
const router = express.Router();
const axios = require('axios');
const Anthropic = require('@anthropic-ai/sdk');
const authenticateFirebaseToken = require('../middlewares/authenticateFirebaseToken');
const admin = require('firebase-admin');

// Configura√ß√µes da API Brave Search
const BRAVE_API_KEY = process.env.BRAVE_API_KEY || 'BSANe0vJ56EwwgLZ4zE3nf2S2BLOYCd';
const BRAVE_BASE_URL = 'https://api.search.brave.com/res/v1/web/search';

// Cache e Rate Limiting
const cache = new Map();
const CACHE_TTL = 3600000; // 1 hora
const RATE_LIMIT_DELAY = 2000; // 2 segundos entre requisi√ß√µes
let lastRequestTime = 0;

// Fun√ß√£o para validar se uma fonte √© realmente confi√°vel
function validarFonteConfiavel(url, fonteEsperada) {
  try {
    // 1. Verificar se a URL √© v√°lida
    if (!url || typeof url !== 'string') {
      return { isValid: false, reason: 'URL inv√°lida' };
    }

    // 2. Verificar se √© HTTPS (seguran√ßa)
    if (!url.startsWith('https://')) {
      return { isValid: false, reason: 'URL n√£o √© HTTPS' };
    }

    // 3. Lista de dom√≠nios oficiais confi√°veis
    const dominiosConfiaveis = [
      'gov.br',
      'ibge.gov.br',
      'mec.gov.br',
      'saude.gov.br',
      'ipea.gov.br',
      'cgi.br',
      'who.int', // OMS
      'un.org', // ONU
      'unesco.org',
      'fao.org'
    ];

    // 4. Verificar se o dom√≠nio √© confi√°vel
    const urlObj = new URL(url);
    const dominioConfiavel = dominiosConfiaveis.some(dominio => 
      urlObj.hostname.includes(dominio)
    );

    if (!dominioConfiavel) {
      return { isValid: false, reason: `Dom√≠nio n√£o confi√°vel: ${urlObj.hostname}` };
    }

    // 5. Verificar se a fonte corresponde ao dom√≠nio esperado
    const mapeamentoFontes = {
      'IBGE': 'ibge.gov.br',
      'Minist√©rio da Sa√∫de': 'saude.gov.br',
      'IPEA': 'ipea.gov.br',
      'MEC': 'mec.gov.br',
      'CGI.br': 'cgi.br',
      'OMS': 'who.int',
      'Instituto Palavra Aberta': 'palavraaberta.org.br',
      'Minist√©rio das Comunica√ß√µes': 'gov.br'
    };

    const dominioEsperado = mapeamentoFontes[fonteEsperada];
    if (dominioEsperado && !urlObj.hostname.includes(dominioEsperado)) {
      return { isValid: false, reason: `Dom√≠nio n√£o corresponde √† fonte esperada: ${fonteEsperada}` };
    }

    // 6. Verificar se n√£o √© uma p√°gina de erro ou redirecionamento
    const pathname = urlObj.pathname.toLowerCase();
    const paginasInvalidas = [
      '/404',
      '/error',
      '/not-found',
      '/redirect',
      '/login',
      '/search',
      '/busca'
    ];

    if (paginasInvalidas.some(pagina => pathname.includes(pagina))) {
      return { isValid: false, reason: 'URL parece ser uma p√°gina de erro ou redirecionamento' };
    }

    // 7. Verificar se tem conte√∫do relevante no path
    if (pathname.length < 10) {
      return { isValid: false, reason: 'URL muito curta, provavelmente n√£o √© uma p√°gina de conte√∫do' };
    }

    // 8. Verificar se n√£o √© um arquivo (PDF, DOC, etc.)
    const extensoesArquivo = ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx'];
    if (extensoesArquivo.some(ext => url.toLowerCase().includes(ext))) {
      return { isValid: false, reason: 'URL aponta para um arquivo, n√£o uma p√°gina web' };
    }

    // Se passou em todas as valida√ß√µes
    return { isValid: true, reason: 'Fonte validada com sucesso' };

  } catch (error) {
    return { isValid: false, reason: `Erro na valida√ß√£o: ${error.message}` };
  }
}

// Fun√ß√£o para buscar fontes reais usando API do Brave
async function buscarFonteReal(termo, fonte) {
  try {
    // Verificar cache primeiro
    const cacheKey = `${fonte}_${termo}`;
    const cached = cache.get(cacheKey);
    if (cached && (Date.now() - cached.timestamp) < CACHE_TTL) {
      console.log(`üíæ Cache hit para ${fonte}: ${cached.url}`);
      return cached;
    }

    // Rate limiting - aguardar se necess√°rio
    const now = Date.now();
    const timeSinceLastRequest = now - lastRequestTime;
    if (timeSinceLastRequest < RATE_LIMIT_DELAY) {
      const waitTime = RATE_LIMIT_DELAY - timeSinceLastRequest;
      console.log(`‚è≥ Aguardando ${waitTime}ms para respeitar rate limit...`);
      await new Promise(resolve => setTimeout(resolve, waitTime));
    }

    // Tentar apenas as queries mais eficazes
    const queries = [
      `${fonte} ${termo} site:gov.br`,
      `${fonte} ${termo} site:ibge.gov.br`,
      `${fonte} ${termo} site:mec.gov.br`,
      `${termo} ${fonte} brasil`
    ];

    for (const query of queries) {
      try {
        lastRequestTime = Date.now();
        
        const response = await axios.get(BRAVE_BASE_URL, {
          headers: {
            'X-Subscription-Token': BRAVE_API_KEY,
            'Accept': 'application/json'
          },
          params: {
            q: query,
            count: 3,
            offset: 0,
            mkt: 'pt-BR',
            safesearch: 'moderate'
          }
        });

        if (response.data && response.data.web && response.data.web.results && response.data.web.results.length > 0) {
          // Procurar resultado mais relevante
          const resultado = response.data.web.results.find(r => 
            r.url.includes('.gov.br') || 
            r.url.includes('ibge') || 
            r.url.includes('mec') ||
            r.url.includes('saude') ||
            r.url.includes('ipea') ||
            r.url.includes('cgi')
          ) || response.data.web.results[0];

          if (resultado && resultado.url) {
            // VALIDA√á√ÉO RIGOROSA: Verificar se a fonte √© realmente confi√°vel
            const urlValida = validarFonteConfiavel(resultado.url, fonte);
            
            if (urlValida.isValid) {
              const fonteEncontrada = {
                url: resultado.url,
                titulo: resultado.title,
                descricao: resultado.description,
                timestamp: Date.now(),
                validada: true
              };
              
              // Salvar no cache
              cache.set(cacheKey, fonteEncontrada);
              
              console.log(`‚úÖ Fonte VALIDADA para ${fonte}: ${resultado.url}`);
              return fonteEncontrada;
            } else {
              console.log(`‚ùå Fonte REJEITADA para ${fonte}: ${resultado.url} - ${urlValida.reason}`);
            }
          }
        }
      } catch (queryError) {
        if (queryError.response && queryError.response.status === 429) {
          console.log(`üö´ Rate limit atingido para ${fonte}, aguardando...`);
          await new Promise(resolve => setTimeout(resolve, 5000)); // Aguardar 5 segundos
          continue;
        }
        console.log(`‚ùå Query falhou: ${query}`, queryError.message);
        continue;
      }
    }
  } catch (error) {
    console.error('Erro geral ao buscar fonte real:', error.message);
  }
  
  // Fallback para fonte est√°tica se a API falhar
  console.log(`‚ö†Ô∏è Usando fallback para ${fonte} - NENHUMA FONTE REAL ENCONTRADA`);
  return {
    url: null,
    titulo: fonte,
    descricao: null,
    timestamp: Date.now(),
    validada: false,
    isFallback: true
  };
}

// Certifique-se de que o Firebase Admin est√° inicializado
// admin.initializeApp({
//   credential: admin.credential.applicationDefault(),
//   // databaseURL: 'https://appviagens-ec9b1-default-rtdb.firebaseio.com"'
// });

// Rota para gerar tema simples (compatibilidade com PracticePage)
router.post('/generate-theme-ai', authenticateFirebaseToken, async (req, res) => {
  try {
    const { areaTema, nivelProva, contextoEspecifico, quantidadeTextos } = req.body;
    
    // Temas ENEM realistas com problematiza√ß√£o
    const temasEstaticos = [
      {
        id: `tema_${Date.now()}`,
        titulo: "Desafios para a valoriza√ß√£o do trabalho no Brasil contempor√¢neo",
        areaTema: areaTema || 'social',
        nivelProva: nivelProva || 'enem',
        descricao: "Reda√ß√£o ENEM - Proposta de interven√ß√£o sobre valoriza√ß√£o do trabalho",
        textosMotivadores: [
          {
            titulo: "Texto I",
            conteudo: "O Brasil possui uma das maiores desigualdades salariais do mundo. Segundo dados do IBGE, a diferen√ßa entre os 10% mais ricos e os 10% mais pobres √© de 13 vezes. Enquanto executivos recebem sal√°rios milion√°rios, trabalhadores essenciais como garis, enfermeiros e professores ganham sal√°rios que mal cobrem as despesas b√°sicas. Esta realidade contrasta com pa√≠ses desenvolvidos, onde a valoriza√ß√£o do trabalho √© uma prioridade social.",
            fonte: "IBGE - Pesquisa Nacional por Amostra de Domic√≠lios, 2023"
          },
          {
            titulo: "Texto II",
            conteudo: "A pandemia de COVID-19 evidenciou a import√¢ncia de profiss√µes historicamente desvalorizadas. Profissionais da sa√∫de, entregadores, funcion√°rios de supermercados e trabalhadores da limpeza se tornaram essenciais para o funcionamento da sociedade. No entanto, muitos continuam recebendo sal√°rios baixos e trabalhando em condi√ß√µes prec√°rias, sem reconhecimento adequado de sua import√¢ncia social.",
            fonte: "Minist√©rio da Sa√∫de - Relat√≥rio sobre Trabalhadores Essenciais, 2024"
          },
          {
            titulo: "Texto III",
            conteudo: "A automa√ß√£o e a intelig√™ncia artificial amea√ßam milh√µes de empregos no Brasil. Estudos indicam que at√© 2030, cerca de 15 milh√µes de trabalhadores podem ser substitu√≠dos por m√°quinas. Este cen√°rio exige uma redefini√ß√£o do conceito de trabalho e do valor atribu√≠do √†s diferentes profiss√µes, especialmente aquelas que requerem habilidades humanas √∫nicas como criatividade, empatia e pensamento cr√≠tico.",
            fonte: "Instituto de Pesquisa Econ√¥mica Aplicada (IPEA), 2024"
          },
          {
            titulo: "Texto IV",
            conteudo: "A educa√ß√£o profissional e tecnol√≥gica surge como alternativa para qualificar trabalhadores e aumentar sua valoriza√ß√£o no mercado. Programas como o Pronatec e o Novos Caminhos t√™m como objetivo formar profissionais t√©cnicos em √°reas estrat√©gicas. No entanto, ainda h√° resist√™ncia cultural em rela√ß√£o ao ensino t√©cnico, visto por muitos como inferior ao ensino superior tradicional.",
            fonte: "Minist√©rio da Educa√ß√£o - Pol√≠tica Nacional de Educa√ß√£o Profissional, 2024"
          }
        ],
        dataCriacao: new Date(),
        fonte: 'Sistema de Temas ENEM'
      },
      {
        id: `tema_${Date.now() + 1}`,
        titulo: "Os desafios para combater a desinforma√ß√£o no Brasil",
        areaTema: areaTema || 'tecnologia',
        nivelProva: nivelProva || 'enem',
        descricao: "Reda√ß√£o ENEM - Proposta de interven√ß√£o sobre desinforma√ß√£o e fake news",
        textosMotivadores: [
          {
            titulo: "Texto I",
            conteudo: "A desinforma√ß√£o se tornou um dos maiores desafios das sociedades democr√°ticas no s√©culo XXI. No Brasil, pesquisas indicam que 62% da popula√ß√£o j√° compartilhou informa√ß√µes falsas nas redes sociais, muitas vezes sem saber. As fake news se espalham 6 vezes mais r√°pido que informa√ß√µes verdadeiras, criando um ambiente de polariza√ß√£o e desconfian√ßa que amea√ßa a coes√£o social e a democracia.",
            fonte: "Instituto de Tecnologia e Sociedade (ITS) - Pesquisa sobre Desinforma√ß√£o, 2024"
          },
          {
            titulo: "Texto II",
            conteudo: "Durante a pandemia de COVID-19, a desinforma√ß√£o sobre vacinas e tratamentos causou milhares de mortes evit√°veis. Teorias conspirat√≥rias sobre a origem do v√≠rus e a efic√°cia das vacinas levaram muitas pessoas a recusar a imuniza√ß√£o. Este fen√¥meno n√£o se limita √† sa√∫de: elei√ß√µes, mudan√ßas clim√°ticas e direitos humanos tamb√©m s√£o alvos constantes de campanhas de desinforma√ß√£o organizadas.",
            fonte: "Organiza√ß√£o Mundial da Sa√∫de (OMS) - Relat√≥rio sobre Infodemia, 2024"
          },
          {
            titulo: "Texto III",
            conteudo: "A educa√ß√£o midi√°tica surge como ferramenta fundamental para combater a desinforma√ß√£o. Pa√≠ses como Finl√¢ndia e Canad√° j√° implementaram programas de alfabetiza√ß√£o midi√°tica nas escolas, ensinando estudantes a identificar fontes confi√°veis e verificar informa√ß√µes. No Brasil, iniciativas como o 'EducaM√≠dia' buscam capacitar professores para desenvolver o pensamento cr√≠tico dos alunos em rela√ß√£o √†s informa√ß√µes que consomem.",
            fonte: "Instituto Palavra Aberta - Programa EducaM√≠dia, 2024"
          },
          {
            titulo: "Texto IV",
            conteudo: "As plataformas digitais t√™m responsabilidade crescente no combate √† desinforma√ß√£o. Facebook, Twitter e WhatsApp implementaram medidas como fact-checking e limita√ß√£o de compartilhamentos, mas cr√≠ticos argumentam que essas a√ß√µes s√£o insuficientes e podem limitar a liberdade de express√£o. O equil√≠brio entre combate √† desinforma√ß√£o e preserva√ß√£o da liberdade de express√£o permanece um desafio complexo para governos e empresas de tecnologia.",
            fonte: "Comit√™ Gestor da Internet no Brasil (CGI.br) - Relat√≥rio sobre Regula√ß√£o Digital, 2024"
          }
        ],
        dataCriacao: new Date(),
        fonte: 'Sistema de Temas ENEM'
      },
      {
        id: `tema_${Date.now() + 2}`,
        titulo: "Desafios para a inclus√£o digital no Brasil",
        areaTema: areaTema || 'tecnologia',
        nivelProva: nivelProva || 'enem',
        descricao: "Reda√ß√£o ENEM - Proposta de interven√ß√£o sobre inclus√£o digital",
        textosMotivadores: [
          {
            titulo: "Texto I",
            conteudo: "A pandemia acelerou a digitaliza√ß√£o da sociedade, mas tamb√©m aprofundou as desigualdades digitais no Brasil. Cerca de 30% da popula√ß√£o brasileira n√£o tem acesso √† internet, principalmente nas regi√µes Norte e Nordeste. Entre os que t√™m acesso, muitos enfrentam conex√µes lentas e inst√°veis, limitando suas possibilidades de trabalho remoto, educa√ß√£o online e acesso a servi√ßos p√∫blicos digitais.",
            fonte: "Comit√™ Gestor da Internet no Brasil (CGI.br) - TIC Domic√≠lios, 2023"
          },
          {
            titulo: "Texto II",
            conteudo: "A exclus√£o digital afeta especialmente idosos, pessoas com defici√™ncia e comunidades rurais. Muitos idosos se sentem exclu√≠dos da sociedade digital, incapazes de acessar servi√ßos banc√°rios online, fazer compras pela internet ou usar aplicativos de transporte. Pessoas com defici√™ncia enfrentam barreiras de acessibilidade em sites e aplicativos, enquanto comunidades rurais sofrem com a falta de infraestrutura de telecomunica√ß√µes.",
            fonte: "Instituto Brasileiro de Geografia e Estat√≠stica (IBGE) - Pesquisa Nacional por Amostra de Domic√≠lios, 2023"
          },
          {
            titulo: "Texto III",
            conteudo: "A educa√ß√£o digital se tornou essencial para a cidadania no s√©culo XXI. No entanto, muitas escolas p√∫blicas n√£o possuem laborat√≥rios de inform√°tica adequados ou professores capacitados para ensinar compet√™ncias digitais. Esta realidade cria um ciclo de exclus√£o: estudantes sem acesso √† tecnologia digital t√™m dificuldades para acompanhar o ensino remoto e desenvolvem menos habilidades necess√°rias para o mercado de trabalho moderno.",
            fonte: "Minist√©rio da Educa√ß√£o - Censo Escolar, 2023"
          },
          {
            titulo: "Texto IV",
            conteudo: "Programas como o 'Wi-Fi Brasil' e o 'Internet para Todos' buscam expandir o acesso √† internet em √°reas remotas, mas enfrentam desafios de infraestrutura e sustentabilidade. A inclus√£o digital n√£o se limita ao acesso √† internet: √© necess√°rio tamb√©m capacitar as pessoas para usar as tecnologias de forma cr√≠tica e produtiva, garantindo que todos possam se beneficiar das oportunidades da era digital.",
            fonte: "Minist√©rio das Comunica√ß√µes - Plano Nacional de Banda Larga, 2024"
          }
        ],
        dataCriacao: new Date(),
        fonte: 'Sistema de Temas ENEM'
      }
    ];
    
    // Selecionar tema aleat√≥rio
    const temaSelecionado = temasEstaticos[Math.floor(Math.random() * temasEstaticos.length)];
    
    // Buscar fontes reais apenas para o tema selecionado
    let fontesReais = [];
    
    console.log(`üéØ Tema selecionado: "${temaSelecionado.titulo}"`);
    
    if (temaSelecionado.titulo.includes('valoriza√ß√£o do trabalho')) {
      console.log('üîç Buscando fontes para tema: valoriza√ß√£o do trabalho');
      fontesReais = await Promise.all([
        buscarFonteReal('desigualdade renda sal√°rio', 'IBGE'),
        buscarFonteReal('trabalhadores essenciais pandemia', 'Minist√©rio da Sa√∫de'),
        buscarFonteReal('automa√ß√£o intelig√™ncia artificial empregos', 'IPEA'),
        buscarFonteReal('educa√ß√£o profissional t√©cnica', 'MEC')
      ]);
    } else if (temaSelecionado.titulo.includes('desinforma√ß√£o')) {
      console.log('üîç Buscando fontes para tema: desinforma√ß√£o');
      fontesReais = await Promise.all([
        buscarFonteReal('desinforma√ß√£o fake news redes sociais', 'ITS'),
        buscarFonteReal('infodemia pandemia vacinas', 'OMS'),
        buscarFonteReal('educa√ß√£o midi√°tica alfabetiza√ß√£o', 'Instituto Palavra Aberta'),
        buscarFonteReal('regula√ß√£o digital plataformas', 'CGI.br')
      ]);
    } else if (temaSelecionado.titulo.includes('inclus√£o digital')) {
      console.log('üîç Buscando fontes para tema: inclus√£o digital');
      fontesReais = await Promise.all([
        buscarFonteReal('inclus√£o digital acesso internet', 'CGI.br'),
        buscarFonteReal('exclus√£o digital desigualdade', 'IBGE'),
        buscarFonteReal('educa√ß√£o digital compet√™ncias', 'MEC'),
        buscarFonteReal('banda larga infraestrutura', 'Minist√©rio das Comunica√ß√µes')
      ]);
    } else {
      console.log('‚ö†Ô∏è Nenhuma condi√ß√£o de busca de fontes foi atendida');
    }
    
    console.log(`üìä Fontes encontradas: ${fontesReais.length}`);
    
    // Atualizar fontes do tema selecionado APENAS com fontes validadas
    if (fontesReais.length > 0) {
      console.log('üîÑ Atualizando fontes do tema...');
      temaSelecionado.textosMotivadores = temaSelecionado.textosMotivadores.map((texto, index) => {
        if (fontesReais[index] && fontesReais[index].validada && fontesReais[index].url) {
          const novaFonte = fontesReais[index].url;
          console.log(`‚úÖ Texto ${index + 1}: ${texto.fonte} ‚Üí ${novaFonte} (VALIDADA)`);
          return {
            ...texto,
            fonte: novaFonte,
            fonteTitulo: fontesReais[index].titulo || texto.fonte,
            fonteValidada: true
          };
        } else if (fontesReais[index] && fontesReais[index].isFallback) {
          console.log(`‚ö†Ô∏è Texto ${index + 1}: Mantendo fonte est√°tica - ${texto.fonte} (FALLBACK)`);
          return {
            ...texto,
            fonteValidada: false,
            isFallback: true
          };
        } else {
          console.log(`‚ùå Texto ${index + 1}: Fonte rejeitada, mantendo est√°tica - ${texto.fonte}`);
          return {
            ...texto,
            fonteValidada: false
          };
        }
      });
    } else {
      console.log('‚ö†Ô∏è Nenhuma fonte real foi encontrada, mantendo TODAS as fontes est√°ticas');
    }
    
    res.json({
      success: true,
      tema: temaSelecionado
    });
    
  } catch (error) {
    console.error('Erro ao gerar tema:', error);
    res.status(500).json({
      success: false,
      message: 'Erro interno do servidor'
    });
  }
});

router.post('/analyze', authenticateFirebaseToken, async (req, res) => {
  let { text, tema } = req.body;

  // Sanitiza o texto de entrada
  text = text.replace(/<[^>]*>?/gm, '');

  // Verifica se o texto n√£o est√° vazio
  if (!text || text.trim() === '') {
    console.error('Erro: Texto da reda√ß√£o est√° vazio.');
    return res.status(400).send({ error: 'O texto da reda√ß√£o √© obrigat√≥rio.' });
  }

  // Verifica se o tema foi fornecido
  if (!tema || !tema.titulo) {
    console.error('Erro: As informa√ß√µes do tema s√£o obrigat√≥rias.');
    return res.status(400).send({ error: 'As informa√ß√µes do tema s√£o obrigat√≥rias.' });
  }

  // Garantir que descricao existe
  if (!tema.descricao) {
    tema.descricao = tema.titulo; // Usar o t√≠tulo como descri√ß√£o se n√£o houver descri√ß√£o
  }

  try {
    console.log('Iniciando an√°lise de reda√ß√£o...');
    console.log('Texto recebido:', text.substring(0, 100) + '...');
    console.log('Tema recebido:', tema);
    
    const user = req.user; // Obt√©m o usu√°rio autenticado

    if (!user) {
      console.error('Usu√°rio n√£o autenticado');
      return res.status(401).send({ error: 'Usu√°rio n√£o autenticado.' });
    }

    // Verificar se o Firebase Admin est√° dispon√≠vel
    if (!admin.apps.length) {
      console.error('Firebase Admin n√£o inicializado');
      return res.status(500).send({ error: 'Servi√ßo temporariamente indispon√≠vel.' });
    }

    console.log('Usu√°rio autenticado:', user.uid);

    // Obt√©m o documento do usu√°rio
    console.log('Buscando documento do usu√°rio no Firestore...');
    const userDocRef = admin.firestore().collection('users').doc(user.uid);
    const userDoc = await userDocRef.get();

    if (!userDoc.exists) {
      console.error('Documento do usu√°rio n√£o encontrado no Firestore');
      return res.status(404).send({ error: 'Usu√°rio n√£o encontrado.' });
    }

    const userData = userDoc.data();
    console.log('Dados do usu√°rio encontrados:', { 
      nome: userData.nome, 
      redacoesEnviadas: userData.redacoesEnviadas || 0,
      planoAtivo: userData.planoAtivo 
    });

    // Verifica o contador e o status premium
    const redacoesEnviadas = userData.redacoesEnviadas || 0;
    if (!userData.planoAtivo && (redacoesEnviadas >= 3)) {
      return res.status(403).send({ error: 'Limite de reda√ß√µes atingido. Fa√ßa upgrade para continuar.' });
    }

    // Chamada √† API da Anthropic usando Claude
    if (!process.env.ANTHROPIC_API_KEY) {
      console.error('Erro: Chave da API da Anthropic n√£o est√° definida.');
      return res.status(500).send({ error: 'Chave da API n√£o configurada.' });
    }

    console.log('Chamando API da Anthropic...');
    
    // Inicializar cliente Anthropic
    const anthropic = new Anthropic({
      apiKey: process.env.ANTHROPIC_API_KEY,
    });

    // Constr√≥i o prompt
    const prompt = `
Voc√™ √© um avaliador experiente de reda√ß√µes do ENEM. Avalie a reda√ß√£o a seguir com base nas 5 compet√™ncias do ENEM, fornecendo feedback detalhado e uma pontua√ß√£o para cada compet√™ncia (0 a 200 pontos). Considere o tema, a imagem e a descri√ß√£o fornecidos.

Tema: ${tema.titulo}

Descri√ß√£o: ${tema.descricao}

${tema.imagem ? `Imagem relacionada ao tema: ${tema.imagem}` : ''}

Reda√ß√£o do aluno:
${text}

Lembre-se de avaliar de acordo com os seguintes crit√©rios:

1. **Dom√≠nio da escrita formal em l√≠ngua portuguesa**: Avalie o dom√≠nio da norma culta, ortografia, gram√°tica, pontua√ß√£o.

2. **Compreens√£o do tema e aplica√ß√£o das √°reas de conhecimento**: Verifique se o aluno compreendeu o tema proposto e utilizou conhecimentos de diferentes √°reas para desenvolver a argumenta√ß√£o.

3. **Capacidade de interpreta√ß√£o das informa√ß√µes e organiza√ß√£o dos argumentos**: Avalie a coer√™ncia, coes√£o e organiza√ß√£o das ideias apresentadas.

4. **Dom√≠nio dos mecanismos lingu√≠sticos de argumenta√ß√£o**: Analise o uso adequado de conectivos, coes√£o referencial e sequencial.

5. **Capacidade de conclus√£o com propostas coerentes que respeitem os direitos humanos**: Verifique se o aluno apresentou uma proposta de interven√ß√£o detalhada, coerente e respeitosa aos direitos humanos.

Por favor, responda apenas com um objeto JSON contendo as seguintes chaves: 
{
  "competencias": [
    {
      "id": 1,
      "descricao": "Feedback da compet√™ncia 1",
      "nota": 200
    },
    {
      "id": 2,
      "descricao": "Feedback da compet√™ncia 2",
      "nota": 120
    },
    // ... mais compet√™ncias
  ],
  "pontuacaoTotal": 850,
  "comentariosGerais": "√ìtima reda√ß√£o! Continue assim."
}
    `.trim();

    // Chamada √† API da Anthropic usando Claude
    const response = await anthropic.messages.create({
      model: 'claude-3-5-haiku-20241022',
      max_tokens: 1500,
      messages: [
        {
          role: 'user',
          content: prompt,
        },
      ],
    });

    const analysisText = response.content[0].text.trim();
    console.log('Resposta da Anthropic recebida:', analysisText.substring(0, 200) + '...');

    // Tenta parsear a resposta como JSON
    let analysis;
    try {
      analysis = JSON.parse(analysisText);
      console.log('An√°lise parseada com sucesso');
    } catch (err) {
      console.error('Erro ao parsear a resposta da IA como JSON:', err);
      console.error('Resposta da IA:', analysisText);
      return res
        .status(500)
        .send({ error: 'Erro ao processar a avalia√ß√£o. Tente novamente mais tarde.' });
    }

    // Verifica se todas as chaves necess√°rias est√£o presentes
    const requiredFields = ['competencias', 'pontuacaoTotal', 'comentariosGerais'];
    const hasAllFields = requiredFields.every((field) => field in analysis);

    if (!hasAllFields) {
      console.error('Resposta JSON da IA est√° faltando campos:', analysis);
      return res
        .status(500)
        .send({ error: 'Resposta inv√°lida da avalia√ß√£o. Tente novamente mais tarde.' });
    }

    // Salva a reda√ß√£o e a avalia√ß√£o no Firestore
    console.log('Salvando reda√ß√£o no Firestore...');
    await admin.firestore().collection('redacoes').add({
      usuarioId: user.uid,
      nome: userData.nome,
      fotoURL: userData.fotoURL,
      texto: text,
      avaliacao: analysis,
      temaId: tema.id || 'unknown',
      criadoEm: admin.firestore.FieldValue.serverTimestamp(),
    });
    console.log('Reda√ß√£o salva no Firestore');

    // Atualiza o n√∫mero de reda√ß√µes enviadas pelo usu√°rio
    console.log('Atualizando contador de reda√ß√µes...');
    await userDocRef.update({
      redacoesEnviadas: admin.firestore.FieldValue.increment(1),
    });
    console.log('Contador de reda√ß√µes atualizado');

    console.log('An√°lise conclu√≠da com sucesso!');
    res.status(200).json({ analysis });
  } catch (error) {
    console.error('Erro ao analisar a reda√ß√£o:', error.response?.data || error.message || error);

    // Tratamento de erros
    if (error.response && error.response.status === 401) {
      res.status(500).send({ error: 'Falha na autentica√ß√£o. Verifique a chave da API.' });
    } else if (error.response && error.response.status === 429) {
      res.status(500).send({ error: 'Limite de taxa excedido. Tente novamente mais tarde.' });
    } else if (error.message === 'Limite de reda√ß√µes atingido. Fa√ßa upgrade para continuar.') {
      res.status(403).send({ error: 'Limite de reda√ß√µes atingido. Fa√ßa upgrade para continuar.' });
    } else {
      res.status(500).send({ error: 'Erro ao analisar a reda√ß√£o' });
    }
  }
});

module.exports = router;
